// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require("Verifier");
const Proof = require("../../zokrates/code/square/proof.json");

contract("TestSquareVerifier", accounts => {

    let account_one = accounts[0];

    // Test verification with correct proof
    // - use the contents from proof.json generated from zokrates steps
    it("Correct proof should be successfully verified", async () => {
        this.contract = await Verifier.new({from: account_one});
        let verificationResult = await this.contract.verifyTx.call(...Object.values(Proof.proof), Proof.inputs);
        assert.equal(verificationResult, true, "Proof verification must be successful");
    })

    // Test verification with incorrect proof
    it("False Proof must not be verified successfully", async () => {
        let result = await this.contract.verifyTx.call(...Object.values(Proof.proof), [25, 58]);
        assert.equal(result, false, "False proof must not be successfully verified");
    })

})
